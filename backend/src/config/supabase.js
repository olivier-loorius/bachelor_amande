const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Configuration Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

// V√©rification des variables d'environnement
if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes!');
  console.error('üìù Cr√©ez un fichier .env √† la racine du projet avec:');
  console.error('SUPABASE_URL=votre_url_supabase');
  console.error('SUPABASE_ANON_KEY=votre_cl√©_anon');
  console.error('SUPABASE_SERVICE_ROLE_KEY=votre_cl√©_service (optionnel)');
  process.exit(1);
}

// Client Supabase pour les op√©rations publiques
const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Client Supabase pour les op√©rations admin (service role)
const supabaseAdmin = supabaseServiceKey 
  ? createClient(supabaseUrl, supabaseServiceKey)
  : supabase; // Fallback sur le client public si pas de service key

console.log('‚úÖ Configuration Supabase charg√©e');

module.exports = {
  supabase,
  supabaseAdmin
}; 